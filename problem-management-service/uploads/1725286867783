import json
import os
import sys
from ortools.constraint_solver import routing_enums_pb2
from ortools.constraint_solver import pywrapcp
from math import radians, sin, cos, sqrt, atan2

def haversine_distance(lat1, lon1, lat2, lon2):
    """Calculate the great-circle distance between two points on the Earth's surface."""
    lat1, lon1, lat2, lon2 = map(radians, [lat1, lon1, lat2, lon2])
    dlat = lat2 - lat1
    dlon = lon2 - lon1
    a = sin(dlat/2)**2 + cos(lat1) * cos(lat2) * sin(dlon/2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
    distance = 6371 * c  # Earth radius in kilometers
    return int(round(1000 * distance))

def calculate_distance_matrix(locations):
    num_locations = len(locations)
    distance_matrix = [[0]*num_locations for _ in range(num_locations)]
    for i in range(num_locations):
        for j in range(num_locations):
            lat1, lon1 = locations[i]['Latitude'], locations[i]['Longitude']
            lat2, lon2 = locations[j]['Latitude'], locations[j]['Longitude']
            distance_matrix[i][j] = haversine_distance(lat1, lon1, lat2, lon2)
    return distance_matrix

def create_data_model(locations, num_vehicles, depot):
    data = {}
    data["distance_matrix"] = calculate_distance_matrix(locations)
    data["num_vehicles"] = num_vehicles
    data["depot"] = depot
    return data

def print_solution(data, manager, routing, solution):
    print(f"Objective: {solution.ObjectiveValue()}")
    max_route_distance = 0
    for vehicle_id in range(data["num_vehicles"]):
        index = routing.Start(vehicle_id)
        plan_output = f"Route for vehicle {vehicle_id}:
"
        route_distance = 0
        while not routing.IsEnd(index):
            plan_output += f" {manager.IndexToNode(index)} -> "
            previous_index = index
            index = solution.Value(routing.NextVar(index))
            route_distance += routing.GetArcCostForVehicle(
                previous_index, index, vehicle_id
            )
        plan_output += f"{manager.IndexToNode(index)}
"
        plan_output += f"Distance of the route: {route_distance}m
"
        print(plan_output)
        max_route_distance = max(route_distance, max_route_distance)
    print(f"Maximum of the route distances: {max_route_distance}m")

def read_json_file(file_path):
    with open(file_path, 'r') as file:
        data = json.load(file)
        return data.get('Locations', [])

def main():
    if len(sys.argv) != 5:
        print("Wrong number of args.
Usage: python <script_name.py> <input_file.json> <num_vehicles> <depot> <max_distance>")
        sys.exit(1)
    input_file = os.path.abspath(sys.argv[1])  # Get absolute path
    num_vehicles = int(sys.argv[2])
    depot = int(sys.argv[3])
    max_distance = int(sys.argv[4])
    locations = read_json_file(input_file)
    data = create_data_model(locations, num_vehicles, depot)
    manager = pywrapcp.RoutingIndexManager(
        len(data["distance_matrix"]), data["num_vehicles"], data["depot"]
    )
    routing = pywrapcp.RoutingModel(manager)
    def distance_callback(from_index, to_index):
        from_node = manager.IndexToNode(from_index)
        to_node = manager.IndexToNode(to_index)
        return data["distance_matrix"][from_node][to_node]
    transit_callback_index = routing.RegisterTransitCallback(distance_callback)
    routing.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)
    dimension_name = "Distance"
    routing.AddDimension(
        transit_callback_index,
        0,  # no slack
        max_distance,  # vehicle maximum travel distance
        True,  # start cumul to zero
        dimension_name,
    )
    distance_dimension = routing.GetDimensionOrDie(dimension_name)
    distance_dimension.SetGlobalSpanCostCoefficient(100)
    search_parameters = pywrapcp.DefaultRoutingSearchParameters()
    search_parameters.first_solution_strategy = (
        routing_enums_pb2.FirstSolutionStrategy.PATH_CHEAPEST_ARC
    )
    solution = routing.SolveWithParameters(search_parameters)
    if solution:
        print_solution(data, manager, routing, solution)
    else:
        print("No solution found !")

if __name__ == "__main__":
    main()028},{"Latitude":37.97928385591035,"Longitude":23.739538248048625},{"Latitude":37.99776335462359,"Longitude":23.78368438670551},{"Latitude":37.987058794911384,"Longitude":23.724947820160367},{"Latitude":37.95335813624227,"Longitude":23.793968517493575},{"Latitude":37.986534806263265,"Longitude":23.740124055791686},{"Latitude":37.98898243660425,"Longitude":23.77864395860953},{"Latitude":37.95543794228646,"Longitude":23.77005724588043},{"Latitude":37.97466077199864,"Longitude":23.705283110856186},{"Latitude":37.971717033806385,"Longitude":23.7526983519777},{"Latitude":38.005672627609485,"Longitude":23.782081751882902},{"Latitude":37.99603507318003,"Longitude":23.77667920080451},{"Latitude":37.97999689582317,"Longitude":23.736086931969275},{"Latitude":37.969130482396736,"Longitude":23.72617924479867},{"Latitude":37.971902072084866,"Longitude":23.744116156304905},{"Latitude":38.00422101588983,"Longitude":23.782279115538806},{"Latitude":37.970766463486044,"Longitude":23.758650536060937},{"Latitude":38.0064193104917,"Longitude":23.71052077863753},{"Latitude":37.96634624858492,"Longitude":23.726865331732693},{"Latitude":37.98515735191177,"Longitude":23.79535051411707},{"Latitude":37.98676244671088,"Longitude":23.701145830396975},{"Latitude":37.96088950618157,"Longitude":23.740422084187106},{"Latitude":37.99334269176015,"Longitude":23.769530167782683},{"Latitude":37.953758757016715,"Longitude":23.79205319147844},{"Latitude":37.95988077160399,"Longitude":23.75569947352677},{"Latitude":37.982670527187366,"Longitude":23.716848537670984},{"Latitude":37.996430996239695,"Longitude":23.796440437038402},{"Latitude":37.95130420365727,"Longitude":23.7924602941498},{"Latitude":38.00324525035587,"Longitude":23.745204534027554},{"Latitude":37.98810703541731,"Longitude":23.787298865415103},{"Latitude":37.95566151064863,"Longitude":23.743470324453867},{"Latitude":37.950260608696325,"Longitude":23.730659819227224},{"Latitude":37.95257331594858,"Longitude":23.72144563777585},{"Latitude":38.00478205476561,"Longitude":23.77050508662622},{"Latitude":38.008741624496864,"Longitude":23.76154333161155},{"Latitude":37.996071468778666,"Longitude":23.721550756932963},{"Latitude":37.992734002139144,"Longitude":23.70460409984526},{"Latitude":38.00846217501473,"Longitude":23.78848278346576},{"Latitude":37.995061316764236,"Longitude":23.7706540908899},{"Latitude":37.968643489111265,"Longitude":23.725422367361897},{"Latitude":37.979996603994636,"Longitude":23.79313547410516},{"Latitude":37.985855756228574,"Longitude":23.7887860796196},{"Latitude":37.95057018790136,"Longitude":23.720624076399137},{"Latitude":37.98516448251913,"Longitude":23.76805540021626},{"Latitude":37.97904004893132,"Longitude":23.798559341606886},{"Latitude":38.00915903627921,"Longitude":23.76118109563746},{"Latitude":37.99404767752486,"Longitude":23.751267251968205},{"Latitude":37.9988539431183,"Longitude":23.77064389466412},{"Latitude":37.95116932896279,"Longitude":23.749106581156635},{"Latitude":37.967186126218024,"Longitude":23.741844211958558},{"Latitude":37.98139534172148,"Longitude":23.78400656519142},{"Latitude":37.954368122971395,"Longitude":23.799885214951704},{"Latitude":37.9676085395246,"Longitude":23.769715600711326},{"Latitude":37.991485525153294,"Longitude":23.724491554480625},{"Latitude":37.987323709788214,"Longitude":23.776676473715888},{"Latitude":37.9656340041845,"Longitude":23.79621638081771},{"Latitude":37.95274210774149,"Longitude":23.78284822097694},{"Latitude":37.98350410860473,"Longitude":23.778101265526534},{"Latitude":37.96006996019173,"Longitude":23.725433922450563},{"Latitude":37.970413513918174,"Longitude":23.75351547883735},{"Latitude":37.99145879165041,"Longitude":23.75456721056552},{"Latitude":38.006401544173464,"Longitude":23.713662383293517},{"Latitude":37.99028693820277,"Longitude":23.73073244931421},{"Latitude":37.98885589974614,"Longitude":23.744338897051694},{"Latitude":38.00716164480657,"Longitude":23.748781392030633},{"Latitude":37.95680020732691,"Longitude":23.77048033612286},{"Latitude":37.95972525981795,"Longitude":23.740431108890203},{"Latitude":37.98437450558076,"Longitude":23.746013590360963},{"Latitude":38.008149506552655,"Longitude":23.722086715058477},{"Latitude":38.00839843698392,"Longitude":23.700430935958618},{"Latitude":38.00435869758746,"Longitude":23.72932203393949},{"Latitude":37.9671122701017,"Longitude":23.732555001485593},{"Latitude":37.98778363055489,"Longitude":23.794711189148185},{"Latitude":37.97125267461899,"Longitude":23.77910894911648},{"Latitude":37.98584538314936,"Longitude":23.732379990594108},{"Latitude":37.95041012828152,"Longitude":23.70488168714869},{"Latitude":37.96569926972177,"Longitude":23.756921139133816},{"Latitude":37.990126188724155,"Longitude":23.762917124706583},{"Latitude":37.98903910397176,"Longitude":23.74972475327461},{"Latitude":38.00588854720454,"Longitude":23.734720942158678},{"Latitude":37.971067324168764,"Longitude":23.767053543989743},{"Latitude":37.9690010802593,"Longitude":23.7502322391538},{"Latitude":37.99665196711437,"Longitude":23.725493447948175},{"Latitude":37.983484951535196,"Longitude":23.75572596950224},{"Latitude":38.00520727339384,"Longitude":23.745847980141335},{"Latitude":37.96308521339061,"Longitude":23.706084286606796},{"Latitude":38.00827516614078,"Longitude":23.710256412326615},{"Latitude":38.00220693039454,"Longitude":23.719805913856447},{"Latitude":37.97061480569997,"Longitude":23.78503189622328},{"Latitude":37.986803857242215,"Longitude":23.724206387113806},{"Latitude":38.00100761246607,"Longitude":23.700647147770148},{"Latitude":37.99058272919213,"Longitude":23.750656308645716},{"Latitude":37.97881022011314,"Longitude":23.72951537492377},{"Latitude":37.98295723568413,"Longitude":23.748696004447467},{"Latitude":37.99563382446127,"Longitude":23.732063009782188},{"Latitude":37.973193412834576,"Longitude":23.758518251912033},{"Latitude":37.96491976609083,"Longitude":23.71892981643249},{"Latitude":37.95960704953925,"Longitude":23.70198090729076},{"Latitude":37.969574959149405,"Longitude":23.71444065410894},{"Latitude":37.99728373530421,"Longitude":23.749867949314858},{"Latitude":37.99844790127793,"Longitude":23.731575963260497},{"Latitude":37.969001349040454,"Longitude":23.725835134559404},{"Latitude":37.97456718319344,"Longitude":23.74877026474655},{"Latitude":37.99203254029359,"Longitude":23.706419702521377},{"Latitude":37.98743849879759,"Longitude":23.74308313446559},{"Latitude":37.97869237665117,"Longitude":23.704392071858503},{"Latitude":37.99387515707356,"Longitude":23.713721214176395},{"Latitude":37.97401469986426,"Longitude":23.71316336292181},{"Latitude":37.962829318095814,"Longitude":23.730903327115655},{"Latitude":37.992825859910695,"Longitude":23.721810704280983},{"Latitude":37.9864925094728,"Longitude":23.730480521036775},{"Latitude":37.970133099656714,"Longitude":23.798641174009802},{"Latitude":37.986503425122855,"Longitude":23.724954336891265},{"Latitude":37.97012725657215,"Longitude":23.732330385207725},{"Latitude":38.008843467817435,"Longitude":23.724318823832533},{"Latitude":37.96848636319664,"Longitude":23.777331878100004},{"Latitude":37.958415469598414,"Longitude":23.74611708236561},{"Latitude":37.95567327176781,"Longitude":23.754149579141913},{"Latitude":37.97289412061377,"Longitude":23.78466332685932},{"Latitude":37.97788009205275,"Longitude":23.787357379767354},{"Latitude":37.955832923736914,"Longitude":23.783142343240954},{"Latitude":37.99908277955099,"Longitude":23.77548465662388},{"Latitude":38.00723817414004,"Longitude":23.78444087390262},{"Latitude":38.001120924732696,"Longitude":23.756434996338417},{"Latitude":37.97922850252552,"Longitude":23.743777214120666},{"Latitude":37.958259618884625,"Longitude":23.725525465100958},{"Latitude":37.957155668971886,"Longitude":23.789186872178345},{"Latitude":37.976250015060735,"Longitude":23.704194074452634},{"Latitude":38.00841427946208,"Longitude":23.76012906513604},{"Latitude":37.96329755345301,"Longitude":23.727852366576762},{"Latitude":37.99542779656454,"Longitude":23.799565181958148},{"Latitude":37.96791032277724,"Longitude":23.763688601633625},{"Latitude":37.96449109909061,"Longitude":23.71885652445368},{"Latitude":37.96836091668519,"Longitude":23.7100967004828}]}